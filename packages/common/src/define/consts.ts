const PATH_MAX = 4096;

function keynames(obj: object, value: any): string[] {
    return Reflect.ownKeys(obj)
        .filter((key) => obj[key] === value)
        .map(String);
}

function keyname(obj: object, value: any): string | null {
    const names: string[] = keynames(obj, value);
    return names && names.length > 0 ? (names.pop() ?? null) : null;
}

const JavaPrimitive = {
    boolean: 'Z',
    byte: 'B',
    char: 'C',
    double: 'D',
    float: 'F',
    int: 'I',
    long: 'J',
    short: 'S',
    void: 'V',
} as const;

const SYSCALL = {
    io_setup: 0,
    io_destroy: 1,
    io_submit: 2,
    io_cancel: 3,
    io_getevents: 4,
    setxattr: 5,
    lsetxattr: 6,
    fsetxattr: 7,
    getxattr: 8,
    lgetxattr: 9,
    fgetxattr: 10,
    listxattr: 11,
    llistxattr: 12,
    flistxattr: 13,
    removexattr: 14,
    lremovexattr: 15,
    fremovexattr: 16,
    getcwd: 17,
    lookup_dcookie: 18,
    eventfd2: 19,
    epoll_create1: 20,
    epoll_ctl: 21,
    epoll_pwait: 22,
    dup: 23,
    dup3: 24,
    fcntl: 25,
    inotify_init1: 26,
    inotify_add_watch: 27,
    inotify_rm_watch: 28,
    ioctl: 29,
    ioprio_set: 30,
    ioprio_get: 31,
    flock: 32,
    mknodat: 33,
    mkdirat: 34,
    unlinkat: 35,
    symlinkat: 36,
    linkat: 37,
    renameat: 38,
    umount2: 39,
    mount: 40,
    pivot_root: 41,
    nfsservctl: 42,
    statfs: 43,
    fstatfs: 44,
    truncate: 45,
    ftruncate: 46,
    fallocate: 47,
    faccessat: 48,
    chdir: 49,
    fchdir: 50,
    chroot: 51,
    fchmod: 52,
    fchmodat: 53,
    fchownat: 54,
    fchown: 55,
    openat: 56,
    close: 57,
    vhangup: 58,
    pipe2: 59,
    quotactl: 60,
    getdents64: 61,
    lseek: 62,
    read: 63,
    write: 64,
    readv: 65,
    writev: 66,
    pread64: 67,
    pwrite64: 68,
    preadv: 69,
    pwritev: 70,
    sendfile: 71,
    pselect6: 72,
    ppoll: 73,
    signalfd4: 74,
    vmsplice: 75,
    splice: 76,
    tee: 77,
    readlinkat: 78,
    newfstatat: 79,
    fstat: 80,
    sync: 81,
    fsync: 82,
    fdatasync: 83,
    sync_file_range: 84,
    timerfd_create: 85,
    timerfd_settime: 86,
    timerfd_gettime: 87,
    utimensat: 88,
    acct: 89,
    capget: 90,
    capset: 91,
    personality: 92,
    exit: 93,
    exit_group: 94,
    waitid: 95,
    set_tid_address: 96,
    unshare: 97,
    futex: 98,
    set_robust_list: 99,
    get_robust_list: 100,
    nanosleep: 101,
    getitimer: 102,
    setitimer: 103,
    kexec_load: 104,
    init_module: 105,
    delete_module: 106,
    timer_create: 107,
    timer_gettime: 108,
    timer_getoverrun: 109,
    timer_settime: 110,
    timer_delete: 111,
    clock_settime: 112,
    clock_gettime: 113,
    clock_getres: 114,
    clock_nanosleep: 115,
    syslog: 116,
    ptrace: 117,
    sched_setparam: 118,
    sched_setscheduler: 119,
    sched_getscheduler: 120,
    sched_getparam: 121,
    sched_setaffinity: 122,
    sched_getaffinity: 123,
    sched_yield: 124,
    sched_get_priority_max: 125,
    sched_get_priority_min: 126,
    sched_rr_get_interval: 127,
    restart_syscall: 128,
    kill: 129,
    tkill: 130,
    tgkill: 131,
    sigaltstack: 132,
    rt_sigsuspend: 133,
    rt_sigaction: 134,
    rt_sigprocmask: 135,
    rt_sigpending: 136,
    rt_sigtimedwait: 137,
    rt_sigqueueinfo: 138,
    rt_sigreturn: 139,
    setpriority: 140,
    getpriority: 141,
    reboot: 142,
    setregid: 143,
    setgid: 144,
    setreuid: 145,
    setuid: 146,
    setresuid: 147,
    getresuid: 148,
    setresgid: 149,
    getresgid: 150,
    setfsuid: 151,
    setfsgid: 152,
    times: 153,
    setpgid: 154,
    getpgid: 155,
    getsid: 156,
    setsid: 157,
    getgroups: 158,
    setgroups: 159,
    uname: 160,
    sethostname: 161,
    setdomainname: 162,
    getrlimit: 163,
    setrlimit: 164,
    getrusage: 165,
    umask: 166,
    prctl: 167,
    getcpu: 168,
    gettimeofday: 169,
    settimeofday: 170,
    adjtimex: 171,
    getpid: 172,
    getppid: 173,
    getuid: 174,
    geteuid: 175,
    getgid: 176,
    getegid: 177,
    gettid: 178,
    sysinfo: 179,
    mq_open: 180,
    mq_unlink: 181,
    mq_timedsend: 182,
    mq_timedreceive: 183,
    mq_notify: 184,
    mq_getsetattr: 185,
    msgget: 186,
    msgctl: 187,
    msgrcv: 188,
    msgsnd: 189,
    semget: 190,
    semctl: 191,
    semtimedop: 192,
    semop: 193,
    shmget: 194,
    shmctl: 195,
    shmat: 196,
    socket: 197,
    socketpair: 198,
    bind: 199,
    listen: 200,
    accept: 201,
    connect: 202,
    getsockname: 203,
    getpeername: 204,
    sendto: 205,
    recvfrom: 206,
    setsockopt: 207,
    getsockopt: 208,
    shutdown: 209,
    sendmsg: 210,
    recvmsg: 211,
    readahead: 212,
    brk: 213,
    munmap: 214,
    mremap: 215,
    add_key: 216,
    request_key: 217,
    keyctl: 218,
    clone: 219,
    execve: 220,
    mmap: 221,
    fadvise64: 222,
    swapon: 223,
    swapoff: 224,
    mprotect: 225,
    msync: 226,
    mlock: 227,
    munlock: 228,
    mlockall: 229,
    munlockall: 230,
    mincore: 231,
    madvise: 232,
    remap_file_pages: 233,
    mbind: 234,
    get_mempolicy: 235,
    set_mempolicy: 236,
    migrate_pages: 237,
    move_pages: 238,
    rt_tgsigqueueinfo: 239,
    perf_event_open: 240,
    accept4: 241,
    recvmmsg: 242,
    wait4: 260,
    prlimit64: 261,
    fanotify_init: 262,
    fanotify_mark: 263,
    name_to_handle_at: 264,
    open_by_handle_at: 265,
    clock_adjtime: 266,
    syncfs: 267,
    setns: 268,
    sendmmsg: 269,
    process_vm_readv: 270,
    process_vm_writev: 271,
    kcmp: 272,
    finit_module: 273,
    sched_setattr: 274,
    sched_getattr: 275,
    renameat2: 276,
    seccomp: 277,
    getrandom: 278,
    memfd_create: 279,
    bpf: 280,
    execveat: 281,
    userfaultfd: 282,
    membarrier: 283,
    mlock2: 284,
    copy_file_range: 285,
    preadv2: 286,
    pwritev2: 287,
    pkey_mprotect: 288,
    pkey_alloc: 289,
    pkey_free: 290,
    statx: 291,
    io_uring_setup: 425,
    io_uring_enter: 426,
    faccessat2: 439,
} as const;

enum mode {
    F_OK = 0,
    X_OK = 1,
    W_OK = 2,
    R_OK = 4,
}

enum a_type {
    AT_NULL = 0,
    AT_IGNORE = 1,
    AT_EXECFD = 2,
    AT_PHDR = 3,
    AT_PHENT = 4,
    AT_PHNUM = 5,
    AT_PAGESZ = 6,
    AT_BASE = 7,
    AT_FLAGS = 8,
    AT_ENTRY = 9,
    AT_NOTELF = 10,
    AT_UID = 11,
    AT_EUID = 12,
    AT_GID = 13,
    AT_EGID = 14,
    AT_PLATFORM = 15,
    AT_HWCAP = 16,
    AT_CLKTCK = 17,
    AT_SECURE = 23,
    AT_BASE_PLATFORM = 24,
    AT_RANDOM = 25,
    AT_HWCAP2 = 26,
    AT_RSEQ_FEATURE_SIZE = 27,
    AT_RSEQ_ALIGN = 28,
    AT_EXECFN = 31,
    AT_MINSIGSTKSZ = 51,
}

const cmd = {
    F_DUPFD: 0,
    F_GETFD: 1,
    F_SETFD: 2,
    F_GETFL: 3,
    F_SETFL: 4,
    F_GETLK: 7,
    F_SETLK: 6,
    F_SETLKW: 8,
    F_GETOWN: 9,
    F_SETOWN: 14,
    F_GETLK64: 22,
    F_SETLK64: 21,
    F_SETLKW64: 23,
    F_GETOWN_EX: 24,
    F_SETOWN_EX: 25,
    F_GETOWNER_UID: 26,
    F_GETOWNER_UIDS: 27,
    F_NOTIFY: 28,
    F_GETPIPE_SZ: 29,
    F_SETPIPE_SZ: 30,
    F_GET_LEASE: 33,
    F_SET_LEASE: 34,
    F_CANCELLK: 35,
    F_GETLK64_BATCH: 36,
    F_SETLK64_BATCH: 37,
    F_GETLKX: 15,
    F_SETLKX: 16,
    F_SETLKWX: 17,
    F_GETSIG: 18,
    F_SETSIG: 19,
    F_IOCTL: 54,
    F_GETFSSTAT: 5,
    F_GETFSSTAT64: 49,
    F_NOTIFY_INT: 41,
    F_GETPATH: 100,
} as const;

const l_type = {
    F_RDLCK: 1,
    F_WRLCK: 2,
    F_UNLCK: 3,
} as const;

const f_access = {
    F_RDACC: 0,
    F_WRACC: 1,
    F_RWACC: 2,
} as const;

const f_deny = {
    F_COMPAT: 0,
    F_RDDNY: 1,
    F_WRDNY: 2,
    F_RWDNY: 3,
    F_NODNY: 4,
} as const;

const oflags = {
    O_CREAT: 0x00000040,
    O_EXCL: 0x00000200,
    O_NOCTTY: 0x00000400,
    O_TRUNC: 0x00000100,
    O_TTY_INIT: 0x00002000,
    O_XATTR: 0x00040000,
} as const;

export { PATH_MAX, SYSCALL, keynames, keyname, a_type, JavaPrimitive, mode, cmd };
